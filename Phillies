Algorithm:
  make an array with all of the data. Sort it from greatest to least then take the top 25 numbers and put it into a new array. 
    Arrays.sort(arr, Collections.reverseOrder());  //use something like this (java)
  
  Then take the average of the new array resulting in the average of the highest top 25 salaries which would be the new guys salary.
    for loop through the array adding each value to the next then dividing by 25
  
  If the guy accepts the contract then *return the average as the value of his one year contract.
  If the guy denies it then *return "contract denied player going to sign with another team, you will recieve a draft pick"
  

from bs4 import BeautifulSoup
import urllib.request
import re

url = "https://questionnaire-148920.appspot.com/swe/data.html"

content = urllib.request.urlopen(url).read()

soup = BeautifulSoup(content)

#print soup.prettify()
#print soup.contents[0].name
dataset_salary = soup.findAll('td', "player-salary")
#print dataset_salary[0]


sum = 0
numberofsalaries = len(dataset_salary)
average = 0
for i in range(0, len(dataset_salary)):
    stringer = dataset_salary[i].renderContents().replace("$", "").replace(",", "")
    stringer = re.sub("\D", "", stringer)

    array = [stringer]
    print (sorted)(stringer,key=int,reverse=True)

    for i in range(0,array[stringer[0,125]]):
        s1 = list();
        for i in range(0, 125):
            s1[i] = i


    if not stringer:
        continue
    #if dataset_salary[i].renderContents()==" ":
    #    continue
    else:
        sum = sum+int(stringer)
    print.sum

average = sum/125
print ("This is the average salary of a player:")
print (average)
print("if player does not accept this one year salary they are free to join another team and we will get a draft pick from said team")
#print soup.findAll('td', "player-salary")[0].renderContents()
#print soup.findAll('td', "player-salary")[1].renderContents()
#print soup.findAll('td', "player-salary")[2].renderContents()
#print soup.findAll('td', "player-salary")[3].renderContents()

#print soup.title
#print soup.title.string
#print soup.p
